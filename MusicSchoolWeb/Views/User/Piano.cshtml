@using MusicSchoolWeb.Models
@{
    ViewBag.Title = "Piano";
    Layout = "~/Views/Shared/HomeLayout.cshtml";
}
<link href="~/assets/css/piano.css" rel="stylesheet" />
<link href="~/assets/css//styleN.css" rel="stylesheet" type="text/css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>
    .center_div {
        width: 500px;
        height: 100px;
        background-color: #f5f5f5;
        border: 1px solid #808080;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-left: -250px;
        /* half width*/
        margin-top: -50px;
        /* half height*/
        padding: 25px;
    }

    .recording_label {
        display: block;
        text-align: center;
        padding: 10px;
        font-family: sans-serif;
        font-size: 1.1em;
        margin-bottom: 25px;
    }

    .loader_bg {
        min-width: 100%;
        background: #c5c5c5;
        min-height: 20px;
        display: block;
    }

    .loader_bg1 {
        min-width: 90%;
        background: grey;
        min-height: 20px;
        display: inline-block;
        position: relative;
        top: -20px;
    }

    #canvas {
        width: 100%;
        height: 10px;
    }
</style>
<style>
    body {
        margin-top: 100px;
        margin-bottom: 100px;
    }

    div#Modal {
        background: rgba(0, 0, 0, 0.6);
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1055;
        opacity: 0;
        visibility: hidden;
        width: 100%;
        height: 100%;
        overflow-x: hidden;
        overflow-y: auto;
        outline: 0;
        transition: all .15s linear;
    }

    .open div#Modal {
        opacity: 1;
        visibility: visible;
    }

    div#Modal .Modal-inner {
        transition: transform .3s ease-out;
        transform: translate(0, -50px);
        min-height: calc(100% - 3.5rem);
        max-width: 500px;
        margin: 1.75rem auto;
        display: flex;
        align-items: center;
        position: relative;
        width: auto;
        pointer-events: none;
    }

    div#Modal .content {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        pointer-events: auto;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, .2);
        border-radius: 0.3rem;
        outline: 0;
        box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .15) !important;
    }

    div#Modal .header {
        display: flex;
        flex-shrink: 0;
        align-items: center;
        justify-content: space-between;
        padding: 1rem 1rem;
        border-bottom: 1px solid #dee2e6;
        border-top-left-radius: calc(0.3rem - 1px);
        border-top-right-radius: calc(0.3rem - 1px);
    }

    div#Modal .body {
        position: relative;
        flex: 1 1 auto;
        padding: 1rem;
    }

        div#Modal .body label {
            display: inline-block;
            font-size: inherit;
            line-height: 1.5;
            font-family: system-ui, -apple-system;
            margin-bottom: 5px;
            text-shadow: none;
            color: #000;
        }

    div#Modal select {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.25rem;
        box-shadow: 0 0 7px rgb(0 0 0 / 13%);
        border-color: transparent;
        border: 1px solid #ced4da;
        transition: all 0.4s ease !important;
        outline: none;
        margin-bottom: 20px;
    }

    div#Modal .header h4.title {
        line-height: 1.5;
        font-size: 1.25rem;
        font-family: system-ui, -apple-system;
        text-shadow: none;
        color: #000;
    }

    div#Modal .footer button {
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        border-radius: 0.25rem;
        transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
        background: #e76464 !important;
        border-color: #e76464;
        cursor: pointer;
        margin: 0.25rem;
        display: inline-block;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        text-align: center;
        text-decoration: none;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
        color: #fff;
        height: auto;
        box-shadow: none;
    }

    div#Modal .header button.close {
        border: none;
        outline: none;
        font-size: 39px;
        color: #a79b9b;
        border-radius: 100%;
        cursor: pointer;
        width: auto !important;
        min-width: auto !important;
        flex: none !important;
        background: transparent !important;
        box-shadow: none !important;
    }

    #controls {
        max-width: 100%;
    }

    button:first-child {
        background: #ebdb21;
    }

    #controls > button {
        width: 49%;
        max-width: 49%;
        margin: 0;
        margin-top: 10px;
    }

        #controls > button#stopButton {
            margin-left: 1%;
        }

        #controls > button#compare {
            margin-left: 1%;
        }


        #controls > button#stopButton:hover {
            background: #2b94df;
        }
</style>
<body>
    <div id="content">
        <div id="content-inner">
            <div id="piano">
                <h1>Piano</h1>
                <div class="help show" tabindex="1">
                    <div class="help-inner">
                        <div id="synth-settings"></div>
                        <div class="opts">
                            <p><strong>Controls:</strong></p>
                            <p>play using home row &amp; above &nbsp; /</p>
                            <p>change playable keys: “,” &amp; “.” &nbsp; /</p>
                            <p>shift keyboard: ← &amp; → <span id="shift"></span></p>
                        </div>
                        <div class="opts">
                            <p><strong>Extras:</strong></p>
                            <p class="toggle-color toggle hold">Color - c &nbsp; /</p>
                            <p class="toggle-demo toggle">Demo - m &nbsp; /</p>
                            <p class="toggle-animate toggle">Visual mode - 8 &nbsp; /</p>
                            <p class="toggle-looper">Looper - 9 &nbsp; /</p>
                            <p>Help - 0</p>
                        </div>
                    </div>
                </div>
                <div class="loop" tabindex="2">loop</div>
            </div>
            <div id="Comparedata">
                <h1 id="lenght1"></h1>
                <h1 id="lenght2"></h1>
            </div>
        </div>
    </div>

    <div id="below">
        <p id="top">↑</p>
        <div id="below-inner">
            <div id="micdiv" style="margin:2%;display:none">
                <img src="~/assets/img/Mic.gif" style="height:100px;width:100px;" /><h6 style="color:red;"> Recording Start....</h6>
            </div>
            <br /><br />
            <div id="controls" style="margin-top:-50px;">
                <button id="recordButton">Record</button>
                <button id="stopButton" disabled>Stop</button>
                <button type="submit" id="compare" style="background: green;">Compare</button>


            </div>
            <div id="formats"></div>
            <table id="dataTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Play Audio</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @if (ViewBag.song != null)
                            {
                                foreach (Lesson src in ViewBag.song)
                                {
                                    <audio id="audio" controls>
                                        <source src="~/AudioFiles/@src.AudioFilename" type="audio/mpeg" id="src" />
                                    </audio>
                                }
                            }

                            @*<audio controls="controls">
                                    <source src="~/AudioFiles/2022-01-27%2010_00%20(1).wav  />
                                </audio>*@
                        </td>
                    </tr>
                    <tr><th>Recorded Audio</th></tr>
                    <tr id="recordingsList"></tr>
                </tbody>
            </table>
            <br />
            <div class="custom-file" style="color:black;display:none">
                <label class="custom-file-label">Upload Your Recorded File</label><br />
                <input type="file" id="upload" name="upload" class="custom-file-input" />

            </div>
            <br />

            <div class="col-lg-12">
                <div class="col-sm-8">
                    <select name="cars" id="cars" style="display:none;">
                        @if (ViewBag.song != null)
                        {
                            foreach (Lesson src in ViewBag.song)
                            {
                                <option value="@src.AudioFilename" selected>@src.AudioFilename</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-sm-8">
                    <select name="cars2" id="audio2" style="display:none;">
                    </select>
                </div>
            </div>
            <br />
            <div class="footer">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-append">

                        </div>
                    </div>
                </div>
            </div>
            @*}*@
            <canvas id="canvas"></canvas>
            @if (TempData["CompareMessage"] != null)
            {
                if (TempData["CompareMessage"].ToString() == "1")
                {

                }
                if (TempData["CompareMessage"].ToString() == "0")
                {
                    <div class="alert alert-warning">
                        <p> The Tune is not Matched and Returned False. !</p>
                    </div>
                }
            }
        <div class="alert alert-success" style="height: 250px; width: 600px;">
            <div class="text-center">
                <h1> Perfect ! 100% At This Lesson</h1>
            </div>
            <br /><br /><br /><br />
           
                              <div class="btn btn-primary" style="text-align:center">
                                  <div class="text-center">
                                      <a href="/Admin/Sub_Category"><h3> Click Here For Next Lesson</h3></a>
                                  </div>
                              </div>
        </div>
            <div class="" id="Modal">
                <script src="~/assets/js/jquery-1.7.1.min.js"></script>
                <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
                <script src="https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js"></script>
                <script src="~/assets/js/app1.js"></script>
                <script src="~/assets/js/audio1.js"></script>
                <script src="~/assets/js/piano1.js"></script>
                @*<button id="compare" onclick="AreFilesEqual(this)">Compare Song</button>*@
            </div>
            <script>
                document.getElementById("upload").addEventListener("change", handleFiles, false);

                function handleFiles(event) {
                    var data = $("#upload").val();
                    $(document).ready(function () {
                        var files = $("#upload").get(0).files;
                        var fileData = new FormData();
                        for (var i = 0; i < files.length; i++) {
                            fileData.append("fileInput", files[i]);
                        }
                        $.ajax({
                            type: "POST",
                            url: "/User/UploadFiles",
                            dataType: "json",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: fileData,
                            success: function (result) {
                                alert(result);
                                $('#audio2').append($('<option>').val(data).text(data));
                                $("#compare").attr("disabled", false);
                                data();
                            },
                            error: function (status) {
                                alert(status);
                            }
                        });

                    });
                    var files = event.target.files;
                    $("#src").attr("src", URL.createObjectURL(files[0]));
                    document.getElementById("audio").load();
                }
                $("#recordButton").click(function () {
                    $("#micdiv").show();
                });
                $("#stopButton").click(function () {
                    $("#micdiv").hide();
                });
                $("#compare").click(function () {
                    //recordingsList
                    var li = $("#inputaudio").val();
                    var demo = $("#cars").val();
                    //alert(li +"  " +demo);
                    //$.ajax()
                    //{
                    //    url: "/Home/CompareAudio";
                    //}
                    $.ajax({
                        type: "POST",
                        url: "/Home/CompareAudio",
                        dataType: "json",
                        data: { au1: li, au2: demo },
                        success: function (msg) {
                            if (msg) {
                                // alert(msg);
                                location.reload(true);
                            } else {
                                alert("Cannot add to list !");
                            }
                        }
                    });
                });
            </script>
            <script>
                !function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0];
                    if (d.getElementById(id)) {
                        js = !d.createElement(s); js.id = id;
                        fjs.parentNode.insertBefore(js, fjs);
                    }
                }(document, "script", "");
            </script>
        </div>

    </div>
</body>
<script>
    window.onload = function () {
        var file = document.getElementById("upload");
        var audio = document.getElementById("audio");

        file.onchange = function () {
            var files = this.files;
            audio.src = URL.createObjectURL(files[0]);
            audio.load();
            audio.play();
            var context = new AudioContext();
            var src = context.createMediaElementSource(audio);
            var analyser = context.createAnalyser();

            var canvas = document.getElementById("canvas");
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            var ctx = canvas.getContext("2d");

            src.connect(analyser);
            analyser.connect(context.destination);

            analyser.fftSize = 256;

            var bufferLength = analyser.frequencyBinCount;
            console.log(bufferLength);

            var dataArray = new Uint8Array(bufferLength);

            var WIDTH = canvas.width;
            var HEIGHT = canvas.height;

            var barWidth = (WIDTH / bufferLength) * 2.5;
            var barHeight;
            var x = 0;

            function renderFrame() {
                requestAnimationFrame(renderFrame);

                x = 0;

                analyser.getByteFrequencyData(dataArray);

                ctx.fillStyle = "#000";
                ctx.fillRect(0, 0, WIDTH, HEIGHT);

                for (var i = 0; i < bufferLength; i++) {
                    barHeight = dataArray[i];

                    var r = barHeight + (25 * (i / bufferLength));
                    var g = 250 * (i / bufferLength);
                    var b = 50;

                    ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
                    ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);

                    x += barWidth + 1;
                }
            }

            audio.play();
            renderFrame();
        };
    };
</script>
<script>

    $(document).ready(function () {
        $("#open").on("click", function () {
            var data = $("#recordingsList").val();
            alert(data);
            $("body").addClass("open");
        });
        $(".close").on("click", function () {
            $("body").removeClass("open");
        });
        $("#Comapresongs").on("click", function () {
            $.ajax({
                type: "GET",
                url: "/User/Compare",
                dataType: "json",
                contentType: false,
                success: function (result) {
                    alert(result);
                    $('#audio2').append($('<option>').val(data).text(data));
                    $('#audio2').val(data);
                },
                error: function (status) {
                    alert(status);
                }
            });
        });
        // compireAudio();
        function compireAudio() {
            var audio1 = "C:\jacob.song1.wav";
            // var audio2 = "C:/Users/upkar/Downloads/2021-12-22 10_05.mp3";jacob1
            var audio2 = "C:/Users/upkar/Downloads/2021-12-22 10_48.wav";
            var i, j, d;
            var matching = 0;
            var t = 0; var i, j, d;
            var matching = 0;
            var t = 0;
            var audio1Arr = Array();
            var audio1Len = audio1.length;
            for (i = 1; i <= audio1Len; i++) {
                //reverse so its like a stack
                d = audio1.charCodeAt(audio1Len - i);
                for (j = 0; j < 8; j++) {
                    audio1Arr.push(d % 2);
                    d = Math.floor(d / 2);
                }
            }
            var audio2Len = audio2.length;
            for (i = 1; i <= audio2Len; i++) {
                //reverse so its like a stack
                d = audio2.charCodeAt(audio2Len - i);
                for (j = 0; j < 8; j++) {
                    if (d % 2 == audio1Arr[t]) {
                        matching++;
                    }
                    d = Math.floor(d / 2);
                    t++;
                }
            }
            var avarage = Number(matching) / ((Number(t) + Number(audio1Arr.length)) / Number(2)) * Number(100);
            alert('The Matching with the two audio is ' + avarage + ' %.');
        }
    });
    debugger
    function data() {
        let lis = document.getElementById('recordingsList').getElementsByTagName('li');
        alert(lis);
    }
</script>

